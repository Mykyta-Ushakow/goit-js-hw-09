{"mappings":"oeAOA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,kBACnCC,UAAWF,SAASC,cAAc,iBAClCE,YAAaH,SAASC,cAAc,mBACpCG,UAAWJ,SAASC,cAAc,qBAG9BF,WAAEM,EAAUH,UAAEI,EAASH,YAAEI,EAAWH,UAAEI,GAAcV,EAE1D,SAASW,EAAcC,EAAUC,GAE/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAES,IAAIC,QAFTH,EAEiB,CAACI,EAASC,KAE3BD,EAAQ,C,SAAEN,E,MAAUC,GAAQ,EAKX,CAACK,EAASC,KAE3BA,EAAO,C,SAACP,E,MAAUC,GAAO,E,CA6B/B,SAASO,GAAcR,SAACA,EAAQC,MAAEA,IAChCf,EAAAuB,OAAOC,QAAQ,uBAAqBV,QAAiBC,MAAW,CAAIU,QAAS,K,CAE/E,SAASC,GAAcZ,SAACA,EAAQC,MAAEA,IAChCf,EAAAuB,OAAOI,QAAQ,sBAAoBb,QAAeC,MAAW,CAAGU,QAAS,K,CAG3Eb,EAAUgB,iBAAiB,SA7B3B,WACEC,MAAMC,iBAENC,YAAW,KAETlB,EAAc,EAAGmB,OAAOvB,EAAWwB,QAChCC,MAAKC,GAAUb,EAAca,KAC7BC,OAAMC,GAASX,EAAcW,KAEhC,IAAK,IAAIC,EAAI,EAAGA,EAAI3B,EAAYsB,MAAOK,IACrCP,YAAW,IAAMlB,EAAcyB,EAAI,EAAGN,OAAOvB,EAAWwB,OAASvB,EAAUuB,MAAQK,GAChFJ,MAAKC,GAAUb,EAAca,KAC7BC,OAAMC,GAASX,EAAcW,MAE9B3B,EAAUuB,MAAQK,EAAE,GAIxB7B,EAAWwB,M","sources":["src/js/03-promises.js"],"sourcesContent":["/*\n\nТака сама проблема що і в попередньому завданні. Схоже, коли шлях до рішення не є очевидний одразу, я гублюся і розбираюся який наступний крок вже по ходу створення функцій/повторення матеріалу.\n\n*/\n\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('[type=\"submit\"]'),\n};\n\nconst { delayInput, stepInput, amountInput, submitBtn } = refs;\n\nfunction createPromise(position, delay) {\n\n  const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    // Fulfill\n    return new Promise((resolve, reject) => {\n\n      resolve({ position, delay });\n      \n    });\n  } else {\n    // Reject\n    return new Promise((resolve, reject) => {\n        \n      reject({position, delay});\n\n    });\n  }\n\n}\n\nfunction handleClick() {\n  event.preventDefault();\n\n  setTimeout(() => {\n\n    createPromise(1, Number(delayInput.value))\n      .then(values => notifySuccess(values))\n      .catch(error => notifyFailure(error));\n    \n    for (let i = 1; i < amountInput.value; i++) {\n      setTimeout(() => createPromise(i + 1, Number(delayInput.value) + stepInput.value * i)\n        .then(values => notifySuccess(values))\n        .catch(error => notifyFailure(error)),\n        \n        stepInput.value * i);\n    }\n    \n  },\n    delayInput.value);\n\n}\n\nfunction notifySuccess({position, delay}) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { timeout: 10000 });\n}\nfunction notifyFailure({position, delay}) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {timeout: 10000});\n}\n\nsubmitBtn.addEventListener(\"click\", handleClick);"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","delayInput","document","querySelector","stepInput","amountInput","submitBtn","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$submitBtn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$notifySuccess","Notify","success","timeout","$47d4ff9957288465$var$notifyFailure","failure","addEventListener","event","preventDefault","setTimeout","Number","value","then","values","catch","error","i"],"version":3,"file":"03-promises.2c7dbb4e.js.map"}